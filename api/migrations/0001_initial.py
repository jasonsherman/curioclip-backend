# Generated by Django 5.2.3 on 2025-06-16 12:24

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_id', models.UUIDField(primary_key=True, serialize=False)),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('avatar_url', models.TextField(blank=True)),
                ('charms_balance', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('price_cents', models.IntegerField()),
                ('clip_quota', models.IntegerField(blank=True, null=True)),
                ('charm_bonus', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'plans',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CharmLedger',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('delta', models.IntegerField()),
                ('reason', models.CharField(max_length=20)),
                ('ref_table', models.TextField(blank=True, null=True)),
                ('ref_id', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
            options={
                'db_table': 'charm_ledger',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Clip',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('platform', models.CharField(choices=[('tiktok', 'TikTok'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('other', 'Other')], default='other', max_length=20)),
                ('platform_video_id', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True)),
                ('url', models.TextField()),
                ('thumbnail_url', models.TextField(blank=True)),
                ('transcript', models.TextField(blank=True)),
                ('summary', models.TextField(blank=True)),
                ('embeddings', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), blank=True, null=True, size=1536)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, to='api.profile')),
            ],
            options={
                'db_table': 'clips',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClipProcessingTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('celery_task_id', models.CharField(max_length=100)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clip', models.ForeignKey(db_column='clip_id', on_delete=django.db.models.deletion.CASCADE, to='api.clip')),
            ],
            options={
                'db_table': 'clip_processing_task',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Curio',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, to='api.profile')),
            ],
            options={
                'db_table': 'curios',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='clip',
            name='curio',
            field=models.ForeignKey(blank=True, db_column='curio_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.curio'),
        ),
        migrations.CreateModel(
            name='CurioComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('curio', models.ForeignKey(db_column='curio_id', on_delete=django.db.models.deletion.CASCADE, to='api.curio')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
            options={
                'db_table': 'curio_comments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('invitee_email', models.TextField()),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('invitee_user', models.ForeignKey(blank=True, db_column='invitee_user_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_invites', to='api.profile')),
                ('inviter', models.ForeignKey(db_column='inviter_id', on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to='api.profile')),
            ],
            options={
                'db_table': 'invitations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CurioRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('curio', models.ForeignKey(db_column='curio_id', on_delete=django.db.models.deletion.CASCADE, to='api.curio')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
            options={
                'db_table': 'curio_ratings',
                'managed': True,
                'unique_together': {('curio', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ClipTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clip', models.ForeignKey(db_column='clip_id', on_delete=django.db.models.deletion.CASCADE, to='api.clip')),
                ('tag', models.ForeignKey(db_column='tag_id', on_delete=django.db.models.deletion.CASCADE, to='api.tag')),
            ],
            options={
                'db_table': 'clip_tags',
                'managed': True,
                'unique_together': {('clip', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starts_at', models.DateTimeField()),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='active', max_length=20)),
                ('plan', models.ForeignKey(db_column='plan_id', on_delete=django.db.models.deletion.DO_NOTHING, to='api.plan')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, to='api.profile')),
            ],
            options={
                'db_table': 'user_plans',
                'managed': True,
                'unique_together': {('user', 'plan', 'starts_at')},
            },
        ),
    ]
